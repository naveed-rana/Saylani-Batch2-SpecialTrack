{"version":3,"sources":["components/header.js","components/Navigation.js","components/Footer.js","components/Section.js","components/User.js","components/NotFound.js","components/Login.js","components/privateRoute.js","components/Admin.js","components/MainSection.js","components/counter.js","redux/action/action.js","components/Addcounter.js","components/decress.js","redux/endPoint/index.js","components/gitHubUser.js","redux/action/githubUser.js","redux/reducer/reducer.js","redux/reducer/gitHubUser.js","redux/reducer/followers.js","redux/reducer/rootReducer.js","redux/store/store.js","App.js","serviceWorker.js","index.js"],"names":["Header","classes","this","props","react_default","a","createElement","className","root","AppBar_default","position","color","Toolbar_default","Typography_default","variant","Component","withStyles","flexGrow","componentName","Login","_this","history","push","onClick","PrivateRoute","_ref","component","Auth","rest","Object","objectWithoutProperties","Route","assign","render","Redirect","to","Admin","Counter","name","counter","RESET","connect","store","console","log","AddCounter","addHandler","addCounter","Decress","data","type","handle","decreementCounter","_this2","startReset","endpoit","GithubUser","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","sendRequest","getGetHubUser","email","password","onFileHandler","e","FormData","index","target","files","length","append","concat","alert","onChangeHandler","value","setState","state","user","loader","axios","get","then","res","catch","err","error","multiple","onChange","githUser","dispatch","url","EndPoint","post","response","initialState","todoReducer","arguments","undefined","action","currentCouter","objectSpread","login","followers","followings","combineReducers","gitHubUser","gitHubFollowers","createStore","rootRuducer","applyMiddleware","thunk","App","es","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b344736.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  }\n};\n\nclass Header extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n        <div className={classes.root}>\n          <AppBar position=\"static\" color=\"default\">\n            <Toolbar>\n              <Typography variant=\"h6\" color=\"inherit\">\n                Todo App \n              </Typography>\n            </Toolbar>\n          </AppBar>\n        </div>\n      );\n  }\n}\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(Header);","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\n\nexport default class Navigation extends Component {\n    render() {\n        return (\n            <div>\n                <Link to=\"/\">HOme</Link>\n                <Link to=\"/user\">User</Link>\n                <Link to=\"/login\">login</Link>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div style={{backgroundColor:'green'}}>\n                Footer\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\n\nexport default class componentName extends Component {\n    render() {\n        return (\n            <div>\n                section\n\n            \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class componentName extends Component {\n\n    \n   \n    \n\n    render() {\n        return (\n            <div>\n                user\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class componentName extends Component {\n    render() {\n        return (\n            <div>\n                NotFound\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Login extends Component {\n\n    \n    Login = () =>{\n\n        this.props.history.push('/user');\n    }\n\n    \n     \n    render() {\n        return (\n            <div>\n        \n                <button onClick={this.Login}>\n                    Login\n                </button>\n                \n            </div>\n        )\n    }\n}\n","import {Route,Redirect} from 'react-router-dom';\nimport React, { Component } from 'react';\n\nexport const PrivateRoute = ({ component : Component , Auth , ...rest }) => (\n    <Route {...rest} render={(props) => (\n        Auth\n        ? <Component {...props} />\n        : <Redirect to='/login' />\n    )} />\n  )\n\n","import React, { Component } from 'react'\n\nexport default class Admin extends Component {\n    \n   \n    \n    render() {\n        return (\n            <div>\n                Admin\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Route,Switch } from 'react-router-dom';\nimport Section from './Section';\nimport User from './User';\nimport NotFound from './NotFound';\nimport Login from './Login';\nimport {PrivateRoute} from './privateRoute'; \nimport Admin from './Admin';\n\nexport default class Main extends Component {\n  \n    constructor(props) {\n        super(props)\n        this.state = {\n            status:false\n        }\n    }\n    \n    render() {\n         const {status} =this.state; \n        return (\n\n            <div>\n             <Switch>\n              <Route exact path='/' component={Section}/>\n              <Route  path='/login' component={Login}/>\n              {/* <Route path='/user' component={User}/>\n              <Route path='/admin' component={Admin}/> */}\n              \n \n              <PrivateRoute path='/user' component={User} Auth={status} />\n              <PrivateRoute path='/admin' component={Admin} Auth={status} />\n\n              <Route  component={NotFound}/>\n              </Switch>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nclass Counter extends Component {\n    render() {\n        return (\n            <div>\n              <p>name:{this.props.name}</p>\n              <p>counter:{this.props.counter}</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => {\n    console.log('state',store);\n    \n    return {\n       counter : store.counter,\n       name : store.name,\n\n    }\n}\n\n\nexport default connect(mapStateToProps,null)(Counter)\n","export const RESET = 'RESET'\n\nexport function addCounter(data) {\n    console.log('data from action',data)\n    return {\n        type: \"ADDCOUNTER\",\n        data:data\n    }\n}\nexport function decreementCounter() {\n    return {\n        type: \"DECREASECOUNTER\",\n        data: \"something\"\n    }\n}\n\nexport function startReset() {\n    return {\n        type: RESET,\n        data: \"something\"\n    }\n}\n\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {addCounter} from '../redux/action/action'\n\nclass AddCounter extends Component {\n\n       addHandler = () =>{\n           console.log('add handler call from component');\n           \n           let data = \"dummy\"\n           this.props.addCounter(data);\n       }\n\n    render() {\n        return (\n            <div>\n                \n                <button onClick={this.addHandler}>\n                    ADD\n                </button>\n                \n            </div>\n        )\n    }\n}\n\nexport default connect(null, {\n    addCounter\n})(AddCounter)","import React, { Component } from 'react';\nimport {decreementCounter,startReset} from '../redux/action/action';\nimport {connect} from 'react-redux';\n\nclass Decress extends Component {\n\n    handle = () => {\n        this.props.decreementCounter();\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.handle}>dec</button> \n\n                <button onClick={()=> this.props.startReset()}>Reset</button> \n\n            </div>\n        )\n    }\n}\nexport default connect(null, {\n    decreementCounter,\n    startReset\n})( Decress)","var endpoit = \"http://localhost:8080\"\n\nexport default endpoit;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {connect} from 'react-redux';\nimport {getGetHubUser} from '../redux/action/githubUser';\n\nclass GithubUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      loader: false,\n      name:'',\n    };\n  }\n\n  sendRequest = () =>{\n    let data = {\n      name:'naveed',\n      email:'rana.naveed812.com',\n      password:'test'\n    }\n    this.props.getGetHubUser(data);\n  }\n\n  \n  componentDidMount() {\n    axios.get('http://localhost:8080/user/authenticate')\n    .then(res => {\n      console.log(res)\n    })\n    .catch(err => {\n      console.error('err',err); \n    })\n  }\n  \n\n  onFileHandler = (e) =>{\n    \n\n    const data = new FormData();\n   \n    for (let index = 0; index < e.target.files.length; index++) {\n      const image = e.target.files[index];\n      data.append(`image${index}`, e.target.files[index]);\n    }\n    // data.append(`image`, e.target.files[0]);\n\n    data.append('name',`naveed`);\n    data.append('email',`email`);\n    data.append('pass',`email123`);\n    alert('generate req')\n    this.props.getGetHubUser(data);\n\n    }\n\n  onChangeHandler =(e)=>{\n    console.log('search value',e.target.value);\n    \n    this.setState({name:e.target.value})\n  }\n\n  render() {\n    return (\n      <div>\n     \n     <p>uploads files</p>\n\n          <input\n           type=\"file\"\n           multiple\n           onChange={this.onFileHandler}\n\n           />\n\n          \n          <button onClick={this.sendRequest}> login </button>\n        {/* so on */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) =>{\n      console.log('store',store);\n      \n  return {\n    user:store.user.githUser\n  }\n}\n\nexport default connect(mapStateToProps, {getGetHubUser})(GithubUser)","import axios from \"axios\";\nimport EndPoint from '../endPoint';\n\nexport function getGetHubUser(data) {\n\n  console.log('console from action',data);\n  \n\n  return dispatch => {\n\n    let url = `${EndPoint}/user/login`;\n\n  \n    axios.post(url, data)\n      .then((response) => {\n        console.log(response.data);\n       \n        \n      }).catch((error) => {\n        console.log(error);\n        //handle error\n      });\n\n  };\n}\n","import { RESET } from \"../action/action\";\n\nvar initialState = {\n  counter: 0,\n  name: \"Khuram\"\n};\n\nfunction todoReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"ADDCOUNTER\":\n      console.log(\"data from reducer\", action.data);\n\n      {\n        let currentCouter = state.counter;\n\n        return {\n          ...state,\n          counter: currentCouter + 1\n        };\n      }\n    case \"DECREASECOUNTER\": {\n      let currentCouter = state.counter;\n      return {\n        ...state,\n        counter: currentCouter - 1\n      };\n    }\n    case RESET: {\n      return {\n        ...state,\n        counter: 0\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default todoReducer;\n","import { RESET } from \"../action/action\";\n\nvar initialState = {\n githUser:{\n     login:'khuram',\n     url:'abc',\n     followers:'121',\n     followings:'11'\n }\n};\n\nfunction githUser(state = initialState, action) {\n  switch (action.type) {\n    \n    case 'AddUser':{\n\n      console.log('data at reducre',action.data);\n\n      return {\n        ...state,\n        githUser:action.data\n      }\n      \n\n    }\n    default:\n      return state;\n  }\n}\n\nexport default githUser;\n","import { RESET } from \"../action/action\";\n\nvar initialState = {\n  followers:[{\n      name:'naveed-rana',\n      login:'abc'\n  }]\n};\n\nfunction followers(state = initialState, action) {\n  switch (action.type) {\n   \n    default:\n      return state;\n  }\n}\n\nexport default followers;\n","\nimport todoReducer from './reducer';\nimport gitHubUser from './gitHubUser';\nimport gitHubFollowers from './followers';\nimport {combineReducers} from 'redux';\n\nexport default combineReducers ({\n    todoReducer,\n    user:gitHubUser,\n    gitHubFollowers\n})","import { createStore,applyMiddleware } from \"redux\";\nimport rootRuducer from \"../reducer/rootReducer\";\nimport thunk from 'redux-thunk';\n\n\nlet store = createStore(\n    rootRuducer,\n    applyMiddleware(thunk));\n\nexport default store;\n","import React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport Navigation from \"./components/Navigation\";\nimport Footer from \"./components/Footer\";\nimport Main from \"./components/MainSection\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Counter from \"./components/counter\";\nimport Addcounter from \"./components/Addcounter\";\nimport Decress from \"./components/decress\";\n\nimport GithubUser from \"./components/gitHubUser\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/store\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        {/* <Router>\n      <div>\n         <Header />\n         <Navigation />\n         <Main/>\n         <Footer />\n      </div>\n      </Router> */}\n        {/* <Addcounter />\n      <Decress />\n      <Counter /> */}\n\n        <GithubUser />\n        \n\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}